//ƒана пр€моугольна€ клеточна€ доска размера M?N клеток.
//“акже дано неограниченное количество стандартных доминошек
//размера 2?1 клетку. ƒоминошки можно поворачивать.
//“ребуетс€ уложить как можно больше доминошек на доску так,
//чтобы соблюдались следующие услови€:
//1.  ажда€ доминошка полностью покрывает две клетки доски.
//2. Ќикакие две доминошки не перекрываютс€.
//3.  ажда€ доминошка полностью лежит внутри доски.  асание
//краев доски допускаетс€.
//Ќайдите максимальное количество доминошек, которое можно
//уложить с данными ограничени€ми.
//¬ходные данные
//¬ единственной строке записано два целых числа M и N Ч размеры
//доски в клетках (1?M?N?16).
//¬ыходные данные
//¬ыведите одно число Ч максимальное количество доминошек, которое
//можно уложить.
fun main() {
    val vvod = readLine()!!.split(" ").map { it.toInt() }
    val n = vvod[0]
    val m = vvod[1]
    var koll = 0
    val ostn = n % 2
    val ostm = m % 2
    if (n == 1 && m == 1) {
        koll = 0
    } else {
        if (ostn in 0 until 1 || ostm in 0 until 1) {
            koll = m * n / 2
        } else if (ostn !in 0 until 1) {
            koll = m * (n - 1) / 2 + m / 2
        } else if (ostm !in 0 until 1) {
            koll = n * (m - 1) / 2 + n / 2
        }
    }
    println(koll)
}