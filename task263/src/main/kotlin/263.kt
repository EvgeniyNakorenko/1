//ѕеред ¬ами матрица размера 5?5, состо€ща€ из 24-x нулей и
//единственной единицы. —троки матрицы пронумеруем числами от
//1 до 5 сверху вниз, столбцы матрицы пронумеруем числами от
//1 до 5 слева направо. «а один ход разрешаетс€ применить к
//матрице одно из двух следующих преобразований:
//ѕомен€ть местами две соседние строки матрицы, то есть строки
//с номерами i и i+1 дл€ некоторого целого i (1?i<5).
//ѕомен€ть местами два соседних столбца матрицы, то есть столбцы
//с номерами j и j+1 дл€ некоторого целого j (1?j<5).
//¬ы считаете, что матрица будет выгл€деть красиво, если единственна€
//единица этой матрицы будет находитьс€ в ее центре (в клетке, котора€
//находитс€ на пересечении третьей строки и третьего столбца).
//ѕосчитайте, какое минимальное количество ходов потребуетс€,
//чтобы сделать матрицу красивой.
//¬ходные данные:
//¬ходные данные состо€т из п€ти строк, в каждой из которых записаны
//п€ть целых чисел: j-ое число в i-ой строке входных данных обозначает
//элемент матрицы, сто€щий на пересечении i-ой строки и j-ого столбца.
//√арантируетс€, что матрица состоит из 24-x нулей и единственной единицы.
//¬ыходные данные:
//¬ыведите единственное целое число Ч минимальное количество действий,
//которое требуетс€, чтобы сделать матрицу красивой.
import kotlin.math.abs

fun main() {
    var kollx = 0
    var kolly = 0
    for (n in 1..5) {
        var vvod = readLine()!!.split(" ").map { it.toInt() }
        if (vvod.contains(1)) {
            kolly += abs(3 - n)
            kollx = abs(2 - vvod.indexOf(1))
        }
    }
    print(kolly + kollx)
}