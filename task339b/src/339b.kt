//Ксюша живет в городе, в котором на главной кольцевой дороге
//находятся n домов. Дома кольцевой пронумерованы от 1 до n по
//часовой стрелке, по счастливой случайности движение на кольцевой
//одностороннее и организовано также по часовой стрелке.
//Недавно Ксюша переехала на кольцевую в дом с номером 1. В связи
//с переездом у нее появилось m дел, чтобы сделать i-ое дело, нужно
//находиться в доме с номером ai, а также сделать все дела с номерами
//меньше i. Изначально, Ксюша находится в доме с номером 1, найдите
//какое минимальное количество времени ей нужно потратить, чтобы
//выполнить все дела, если на переезд между двумя соседними домами
//на кольцевой требуется одна единица времени.
//Входные данные:
//В первой строке записаны два целых числа n и m (2?n?105,1?m?105).
//В второй строке записаны m целых чисел a1,a2,...,am (1?ai?n).
//Обратите внимание, что Ксюша может иметь несколько дел подряд в
//одном и том же доме.
//Выходные данные:
//Выведите единственное целое число — сколько времени придется потратить
//Ксюше, чтобы сделать все дела.
fun main(){
    val nm = readLine()!!.split(" ").map { it.toLong() }
    val ai = readLine()!!.split(" ").map { it.toLong() }
    var ans:Long=-1
    for (i in 0 until nm[1]){
        ans += if (i in 0 until 1) ai[0]
        else if (ai[i.toInt()]<ai[(i-1).toInt()]) nm[0] -ai[(i-1).toInt()] +ai[i.toInt()]
        else ai[i.toInt()]-ai[(i-1).toInt()]
    }
    print(ans)
}